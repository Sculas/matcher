WHITESPACE = _{ " " | "\t" }

letter = @{ 'A'..'Z' | 'a'..'z' | "_" | "$" | "/" | "<" | ">" }
number = @{ ASCII_DIGIT+ }
name = @{ (letter | ASCII_DIGIT)+ }
jtype = @{ "B" | "C" | "D" | "F" | "I" | "J" | "S" | "Z" | "V" | ("L" ~ name ~ ("/" ~ name)* ~ ";") }
descriptor = @{ "["* ~ jtype }
method_descriptor = { name? ~ "(" ~ descriptor* ~ ")" ~ descriptor }

class = { "CLASS" ~ name ~ name? ~ (NEWLINE ~ (comment | field_or_method))* }
field = { "FIELD" ~ name ~ name ~ descriptor }
method = { "METHOD" ~ name ~ method_descriptor ~ (NEWLINE ~ arg)* }
arg = { "ARG" ~ number ~ name }
comment = { "COMMENT" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

// TODO: handle inner classes

// helpers for parsing
field_or_method = { field | method }

mappings = { SOI ~ (class ~ NEWLINE?)+ ~ EOI }